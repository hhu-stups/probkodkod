project.version = '1.0.3-SNAPSHOT';
project.group = 'de.hhu.stups'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'application'

repositories {
    mavenCentral()
}

configurations {
    sablecc
}

sourceSets {
    main {
        java {
            srcDirs = ['build/temp','src/main/java']
        }
    }
}

sourceSets.test.runtimeClasspath += files(sourceSets.main.java.srcDirs)

dependencies {
    sablecc(group: 'de.stups', name: 'sablecc', version: '3.2.7-SNAPSHOT', changing: true)
    compile 'de.hhu.stups:prologlib:2.4.40'
    compile 'kodkod:kodkod:2.0.0'
    compile 'org.ow2.sat4j:org.ow2.sat4j.core:2.3.5'
    testCompile 'junit:junit:4.8.2'
 }

task genParser(type:JavaExec) {
    doFirst{ file('build/temp').mkdirs() }
    inputs.dir new File('src/main/resources')
    outputs.dir new File('build/temp')
    main = 'org.sablecc.sablecc.SableCC'
    classpath = configurations.sablecc
    maxHeapSize = '1024m'
    args = ['-d','build/temp','src/main/resources/problem.grammar']
}

compileJava {
 dependsOn = ['genParser']
}

test {
  doFirst {
    println "testing"
  }

}

mainClassName = 'de.stups.probkodkod.KodkodInteraction'


/*
jar {
 manifest {
       attributes 'Main-Class': mainClassName,
                  'Implementation-Title': 'ProB Kodkod',
                  'Implementation-Version': project.version
   }
 include '**/*.class'
 include '**/*.java'
 exclude '**.*.scc'
 from 'build/temp'
 include '**/*.dat'
 include '**/*.properties'
 from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}
*/

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {

apply plugin: 'signing'

signing {
    sign configurations.archives
}


task javadocJar(type: Jar) {
	 classifier = 'javadoc'
	 from javadoc
}

task sourcesJar(type: Jar) {
	 classifier = 'sources'
	 from sourceSets.main.allSource
}

artifacts {
	 archives javadocJar, sourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'TLA+ to B-AST'
        packaging 'jar'
        // optionally artifactId can be defined here
        description "Translator from TLA+ to ProB's AST representation."
        url 'https://github.com/hhu-stups/tla2bAST'

        licenses {
          license {
            name 'Eclipse Public License, Version 1.0'
            url 'https://www.eclipse.org/legal/epl-v10.html'
          }
        }

        scm {
          connection 'scm:git:git://github.com/hhu-stups/tla2bAST.git'
          developerConnection 'scm:git:git@github.com:hhu-stups/tla2bAST.git'
          url 'https://github.com/hhu-stups/tla2bAST'
        }


        developers {
          developer {
            id 'bendisposto'
            name 'Jens Bendisposto'
            email 'jens@bendisposto.de'
          }
        }
      }
    }
  }
}
}
